Класс DateTime представляет надстройку над Date.
Позволяет просто работать с датой. Имеет следующие методы:

getDate: int / setDate - получение/установка текущей даты
(Имеется проверка на превышение максимального числа в месяце)

getDay: int - получение номера дня недели. Начинается с 1

getMonth: int / setMonth - получение/установка месяца (1 - 12)

getYear: int / setYear - получение/установка года (>= 1970)

getHours: int / setHours - получение/установка часа (0 - 23)

getMinutes: int / setMinutes - получение/установка минут (0 - 59)

getSeconds: int / setSeconds - получение/установка секунд (0 - 59)

getTimestamp: int - получение метки timestamp в секундах

getLastDate: int - получение последнего числа в месяце

modify(intVal, strOperand): void - модификация даты или времени

Использование:
let objCurrentDateTime: new DateTime();
// 12.05.2024 14:30:35

intVal - > 0 и < 0
strOperand:
// year    - год
// month   - месяц
// date    - число
// hours   - час
// minutes - минуты
// seconds - секунды

objCurrentDateTime.modify(5, "year");   // 12.05.2025 14:30:35
objCurrentDateTime.modify(-4, "month"); // 12.01.2024 14:30:35

getInFormat(strFormat): string - возвращает строку, заполненную согласно формату
d / D - число (с ведущим нулём / без нуля)
m / M - месяц (с ведущим нулём / без нуля)
y - полный год
h / H - час (с ведущим нулём / без нуля)
i / I - минуты (с ведущим нулём / без нуля)
s / S - секунды (с ведущим нулём / без нуля)

Использование
objCurrentDateTime->getInFormat("d.m.y h:i:s"); // 12.05.2024 09:09:35
objCurrentDateTime->getInFormat("D.M.y H:I:S"); // 12.5.2024 9:9:35

objCurrentDateTime->getInFormat("h:i"); // 09:09
objCurrentDateTime->getInFormat("H:I"); // 1:9

objCurrentDateTime->getInFormat("y.m.d"); // 2024.05.12